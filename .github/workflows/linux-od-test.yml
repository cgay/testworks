# This is a basic workflow to help you get started with Actions

name: OD-Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        path: repo
    # Runs a single command using the runners shell
    - name: Install Open Dylan and Testworks deps
      run: |
        pwd
        uname -a
        curl -o opendylan.tar.bz2 https://github.com/dylan-lang/opendylan/releases/download/v2019.1.0/opendylan-2019.1-x86-linux.tar.bz2
        tar xfj opendylan.tar.bz2
        opendylan-2019.1/bin/dylan-compiler -version
        curl -o dylan-tool.tar.bz2 https://opendylan.org/downloads/dylan-tool-0.1.tar.bz2
        tar xfj dylan-tool.tar.bz2
        sudo apt install libgc-dev libunwind-dev
        echo "done installing libunwind"
        find dylan-tool -print
        ldd dylan-tool/bin/dylan-tool
        ./dylan-tool/bin/dylan-tool help
        # ./dylan-tool/bin/dylan-tool new workspace testworks
        echo "created workspace"
        ln -s repo/testworks workspace/testworks
        ./dylan-tool/bin/dylan-tool update
        echo "updated workspace"
        ls -l *
    - name: Build testworks
      run: |
        pwd
        ls -l
        cd workspace
        opendylan-2019.1/bin/dylan-compiler -build testworks-test-suite-app
    - name: Run testworks tests
      run: |
        pwd
        ls -l
        ./workspace/_build/bin/testworks-test-suite-app
